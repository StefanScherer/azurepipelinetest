resources:
- repo: self
trigger:
- master

jobs:
- job: LinuxAMD64
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: |
      echo hello from Linux
      uname -a
      # dpkg -l
    displayName: 'Check agent'
  - script: |
      docker version
      docker info
      docker images
    displayName: 'Check Docker'
  # - script: |
  #     docker run hello-world
  #   displayName: 'Run hello-world'
  # - script: |
  #     docker run mplatform/mquery golang:1.12.2
  #   displayName: 'Run mplatform/mquery golang:1.12.2'
  - script: |
      docker build -t hello:linux-amd64 --build-arg buildImage=golang:1.12.3 .
    displayName: 'Build image'
  - script: |
      docker run hello:linux-amd64
    displayName: 'Test image'
  - script: |
      docker images
    displayName: 'List images'

- job: LinuxARM
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: |
      echo hello from Linux
      uname -a
    displayName: 'Check agent'
  - script: |
      docker version
      docker info
      docker images
    displayName: 'Check Docker'
  # - script: |
  #     docker run hello-world
  #   displayName: 'Run hello-world'
  # - script: |
  #     docker run mplatform/mquery golang:1.12.2
  #   displayName: 'Run mplatform/mquery golang:1.12.2'
  - script: |
      docker run --rm --privileged hypriot/qemu-register
    displayName: 'Prepare cross build'
  - script: |
      docker build -t hello:linux-arm --build-arg buildImage=arm32v7/golang:1.12.3-stretch --build-arg targetImage=arm32v7/ubuntu .
    displayName: 'Build image'
  - script: |
      docker run hello:linux-arm
    displayName: 'Test image'
  - script: |
      docker images
    displayName: 'List images'

- job: LinuxARM64
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: |
      echo hello from Linux
      uname -a
    displayName: 'Check agent'
  - script: |
      docker version
      docker info
      docker images
    displayName: 'Check Docker'
  # - script: |
  #     docker run hello-world
  #   displayName: 'Run hello-world'
  # - script: |
  #     docker run mplatform/mquery golang:1.12.2
  #   displayName: 'Run mplatform/mquery golang:1.12.2'
  - script: |
      docker run --rm --privileged hypriot/qemu-register
    displayName: 'Prepare cross build'
  - script: |
      docker build -t hello:linux-arm64 --build-arg buildImage=arm64v8/golang:1.12.3-stretch --build-arg targetImage=arm64v8/ubuntu .
    displayName: 'Build image'
  - script: |
      docker run hello:linux-arm64
    displayName: 'Test image'
  - script: |
      docker images
    displayName: 'List images'

# - job: macOS
#   pool:
#     vmImage: 'macOS-10.14'
#   steps:
#   - script: |
#       echo hello from macOS
#       uname -a
#     displayName: 'Check agent'
#   # Docker is not installed on macOS agent
#   - script: |
#       docker version
#     displayName: 'Check Docker'

- job: Windows2016
  pool:
    vmImage: 'win1803'
  steps:
  - script: |
      echo hello from Windows
      ver
    displayName: 'Check agent'
  - script: |
      docker version
      docker info
      docker images
    displayName: 'Check Docker'
#   - script: |
#       docker run hello-world
#     displayName: 'Run hello-world'
#   - script: |
#       docker run --isolation=hyperv mplatform/mquery golang:1.12.2
#     displayName: 'Run --isolation=hyperv mplatform/mquery golang:1.12.2'
  - script: |
      docker build --isolation=hyperv -t hello:windows-2016 -f Dockerfile.windows --build-arg tag=sac2016 .
    displayName: 'Build image'
  - script: |
      docker run --isolation=hyperv hello:windows-2016
    displayName: 'Test image'
  - script: |
      docker images
    displayName: 'List images'

- job: Windows1803
  pool:
    vmImage: 'win1803'
  steps:
  - script: |
      echo hello from Windows
      ver
    displayName: 'Check agent'
  - script: |
      docker version
      docker info
      docker images
    displayName: 'Check Docker'
#   - script: |
#       docker run hello-world
#     displayName: 'Run hello-world'
#   - script: |
#       docker run --isolation=hyperv mplatform/mquery golang:1.12.2
#     displayName: 'Run --isolation=hyperv mplatform/mquery golang:1.12.2'
  - script: |
      docker build -t hello:windows-1803 -f Dockerfile.windows --build-arg tag=1803 .
    displayName: 'Build image'
  - script: |
      docker run hello:windows-1803
    displayName: 'Test image'
  - script: |
      docker images
    displayName: 'List images'

- job: Windows2019
  pool:
    vmImage: 'windows-2019'
  steps:
  - script: |
      echo hello from Windows
      ver
    displayName: 'Check agent'
  - script: |
      docker version
      docker info
      docker images
    displayName: 'Check Docker'
#   - script: |
#       docker run hello-world
#     displayName: 'Run hello-world'
#   # hyperv isolation doesn't seem to work on windows-2019 agent
#   - script: |
#       docker run --isolation=hyperv mplatform/mquery golang:1.12.2
#     displayName: 'Run --isolation=hyperv mplatform/mquery golang:1.12.2'
  - script: |
      docker build -t hello:windows-1809 -f Dockerfile.windows --build-arg tag=1809 .
    displayName: 'Build image'
  - script: |
      docker run hello:windows-1809
    displayName: 'Test image'
  - script: |
      docker images
    displayName: 'List images'
